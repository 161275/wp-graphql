{
    "docs": [
        {
            "location": "/", 
            "text": "WPGraphQL\n\n\nTesting docs", 
            "title": "About"
        }, 
        {
            "location": "/#wpgraphql", 
            "text": "Testing docs", 
            "title": "WPGraphQL"
        }, 
        {
            "location": "/install-and-activate/", 
            "text": "Plugin Install \n Activation\n\n\nWPGraphQL is a WordPress plugin that adds a GraphQL API to your WordPress site.\n\n\nDownload the Plugin\n\n\nWPGraphQL is available on Github: \nhttps://github.com/wp-graphql/wp-graphql\n\n\nYou can download the plugin or clone the plugin from \nGithub\n.\n\n\nAdd the downloaded/cloned plugin to your WordPress plugin directory. On a typical WordPress install, this is located at \n/wp-content/plugins\n\n\n\n\nNOTE:\n The plugin directory should be \nwp-graphql\n and not something like \nwp-graphql-master\n or \nwp-graphql-develop\n\n\n\n\nRecommended Version\n\n\nFor the most stable and performant experience, it's recommended that you use the \nmost recent\n version of the plugin. You can \nsee the latest releases here\n.\n\n\nOf course, as new features are in development, feel free to check out the latest \ndevelop\n branch or check out any other feature or release.\n\n\nActivate the Plugin\n\n\nOnce the plugin is in the WordPress plugins directory, it can be activated by clicking \"Activate\" on the plugin screen, or via WP CLI \nwp plugin activate wp-graphql\n\n\nVerify the Endpoint Works\n\n\nThe most common use of WPGraphQL is as an API endpoint that can be accessed via HTTP requests (\nalthough it can be used without remote HTTP requests as well\n)\n\n\nIn order for the \n/graphql\n endpoint to work, you must have \npretty permalinks\n enabled and any permalink structure \nother\n than the default WordPress permalink structure.\n\n\nOnce the plugin is active, your site should have a \nyoursite.com/graphql\n endpoint and you the expected response is a JSON payload like so:\n\n\n{\n    \nerrors\n: [\n        {\n            \nmessage\n: \nGraphQL requests must be a POST or GET Request with a valid query\n,\n            \ncategory\n: \nuser\n\n        }\n    ]\n}\n\n\n\n\nIf you see anything else, such as your site's 404 page, you may need to \nflush permalinks\n.\n\n\nUsing the Plugin without the /graphql Endpoint\n\n\nWPGraphQL can be used from the context of WordPress PHP and doesn't require HTTP requests to be used. You can completely remove the \n/graphql\n endpoint that the plugin provides so that the API is not available publicly in \nany way\n but still use GraphQL in your plugin and theme code by using:\n\n\ndo_graphql_request()\n\n\n\n\nI want to learn more about using WPGraphQL in PHP, without making HTTP requests\n.\n\n\nFlush Permalinks\n\n\nActivating the plugin \nshould\n cause the permalinks to flush. Occasionally, this doesn't work. If you have a permalink structure other than the default WordPress structure, and the plugin is active but nothing shows at your site's \n/graphql\n endpoint, try to manually flush your permalinks by:\n\n\n\n\nFrom your WordPress dashboard, visit the \nSettings \n Permalinks\n page. Just visiting the page should flush the permalinks\n\n\n\n\nor\n\n\n\n\nUsing WP CLI run \nwp rewrite flush", 
            "title": "Plugin Install & Activation"
        }, 
        {
            "location": "/install-and-activate/#plugin-install-activation", 
            "text": "", 
            "title": "Plugin Install &amp; Activation"
        }, 
        {
            "location": "/install-and-activate/#wpgraphql-is-a-wordpress-plugin-that-adds-a-graphql-api-to-your-wordpress-site", 
            "text": "", 
            "title": "WPGraphQL is a WordPress plugin that adds a GraphQL API to your WordPress site."
        }, 
        {
            "location": "/install-and-activate/#download-the-plugin", 
            "text": "WPGraphQL is available on Github:  https://github.com/wp-graphql/wp-graphql  You can download the plugin or clone the plugin from  Github .  Add the downloaded/cloned plugin to your WordPress plugin directory. On a typical WordPress install, this is located at  /wp-content/plugins   NOTE:  The plugin directory should be  wp-graphql  and not something like  wp-graphql-master  or  wp-graphql-develop", 
            "title": "Download the Plugin"
        }, 
        {
            "location": "/install-and-activate/#recommended-version", 
            "text": "For the most stable and performant experience, it's recommended that you use the  most recent  version of the plugin. You can  see the latest releases here .  Of course, as new features are in development, feel free to check out the latest  develop  branch or check out any other feature or release.", 
            "title": "Recommended Version"
        }, 
        {
            "location": "/install-and-activate/#activate-the-plugin", 
            "text": "Once the plugin is in the WordPress plugins directory, it can be activated by clicking \"Activate\" on the plugin screen, or via WP CLI  wp plugin activate wp-graphql", 
            "title": "Activate the Plugin"
        }, 
        {
            "location": "/install-and-activate/#verify-the-endpoint-works", 
            "text": "The most common use of WPGraphQL is as an API endpoint that can be accessed via HTTP requests ( although it can be used without remote HTTP requests as well )  In order for the  /graphql  endpoint to work, you must have  pretty permalinks  enabled and any permalink structure  other  than the default WordPress permalink structure.  Once the plugin is active, your site should have a  yoursite.com/graphql  endpoint and you the expected response is a JSON payload like so:  {\n     errors : [\n        {\n             message :  GraphQL requests must be a POST or GET Request with a valid query ,\n             category :  user \n        }\n    ]\n}  If you see anything else, such as your site's 404 page, you may need to  flush permalinks .", 
            "title": "Verify the Endpoint Works"
        }, 
        {
            "location": "/install-and-activate/#using-the-plugin-without-the-graphql-endpoint", 
            "text": "WPGraphQL can be used from the context of WordPress PHP and doesn't require HTTP requests to be used. You can completely remove the  /graphql  endpoint that the plugin provides so that the API is not available publicly in  any way  but still use GraphQL in your plugin and theme code by using:  do_graphql_request()  I want to learn more about using WPGraphQL in PHP, without making HTTP requests .", 
            "title": "Using the Plugin without the /graphql Endpoint"
        }, 
        {
            "location": "/install-and-activate/#flush-permalinks", 
            "text": "Activating the plugin  should  cause the permalinks to flush. Occasionally, this doesn't work. If you have a permalink structure other than the default WordPress structure, and the plugin is active but nothing shows at your site's  /graphql  endpoint, try to manually flush your permalinks by:   From your WordPress dashboard, visit the  Settings   Permalinks  page. Just visiting the page should flush the permalinks   or   Using WP CLI run  wp rewrite flush", 
            "title": "Flush Permalinks"
        }, 
        {
            "location": "/quickstart/frontend/", 
            "text": "", 
            "title": "Frontend"
        }, 
        {
            "location": "/quickstart/backend/", 
            "text": "", 
            "title": "Backend"
        }, 
        {
            "location": "/tutorials/using-graphiql-to-explore-docs-and-schema/", 
            "text": "", 
            "title": "Using GraphiQL to explore the Schema and Docs"
        }, 
        {
            "location": "/tutorials/custom-post-types-and-taxonomies/", 
            "text": "", 
            "title": "Custom Post Types & Taxonomies"
        }, 
        {
            "location": "/tutorials/add-fields-to-schema/", 
            "text": "", 
            "title": "Adding Fields to the Schema"
        }, 
        {
            "location": "/tutorials/use-graphql-in-php-without-http-request/", 
            "text": "", 
            "title": "Using WPGraphQL in PHP without HTTP requests"
        }, 
        {
            "location": "/tutorials/override-field-resolvers/", 
            "text": "", 
            "title": "Overriding Field Resolvers"
        }, 
        {
            "location": "/tutorials/unit-testing-wpgraphql/", 
            "text": "", 
            "title": "Unit Testing WPGraphQL"
        }, 
        {
            "location": "/tutorials/unit-testing-extensions/", 
            "text": "", 
            "title": "Unit Testing your code that extends WPGraphQL"
        }, 
        {
            "location": "/reference/types-and-schema/", 
            "text": "", 
            "title": "GraphQL Types & Schema"
        }, 
        {
            "location": "/reference/actions-filters/", 
            "text": "", 
            "title": "Actions & Filters"
        }, 
        {
            "location": "/reference/auth/", 
            "text": "", 
            "title": "Auth"
        }, 
        {
            "location": "/reference/extensions/", 
            "text": "", 
            "title": "Extensions"
        }, 
        {
            "location": "/faq/", 
            "text": "", 
            "title": "FAQ"
        }
    ]
}